<?phpnamespace App\ClientBundle\Business\Ticket;use App\ClientBundle\Business;use App\ClientBundle\Business\Base\BaseGridHandler;use App\ClientBundle\Entity;class GridHandler extends BaseGridHandler{    function buildBaseQuery($query, $baseObject = 'p', $filter)    {        $query->select($baseObject)            ->from('AppClientBundle:Ticket', $baseObject)            ->andWhere($baseObject . '.idClient = :idClient')            ->setParameter('idClient', $this->getUserId());    }    public function postParseRow(&$r)    {        $r['idClient'] = $this->helperMapping->getMappingTitle('client_list', $r['idClient']);        $r['status'] = $this->helperMapping->getMappingTitle('ticket_status', $r['status']);        $r['last'] = '';    }    function postGetResultArray(&$array)    {        $ticketIdArray = array(0);        foreach ($array as $row) {            $ticketIdArray[] = $row['id'];        }        // Compute amount        $lastMap = array();        $query = $this->container->get('doctrine')->getEntityManager()->createQueryBuilder();        $query->select('i.idTicket, MAX(i.timestamp) as last')            ->from('AppClientBundle:TicketResponse', 'i')            ->andWhere('i.idTicket in (:ticketIdArray)')            ->groupBy('i.idTicket')            ->setParameter('ticketIdArray', $ticketIdArray);        $result = $query->getQuery()->getResult();        foreach ($result as $item) {            $lastMap[$item['idTicket']] = $item['last'];        }        foreach ($array as $k => $r) {            $idTicket = $r['id'];            if (isset($lastMap[$idTicket])) {                $array[$k]['last'] = $lastMap[$idTicket];            }        }    }}