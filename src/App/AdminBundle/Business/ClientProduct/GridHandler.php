<?phpnamespace App\AdminBundle\Business\ClientProduct;use App\ClientBundle\Business;use App\ClientBundle\Business\Base\BaseGridHandler;use App\ClientBundle\Entity;use App\AdminBundle\Business\Order\Constants as OrderConstants;class GridHandler extends BaseGridHandler{    function buildBaseQuery($query, $baseObject = 'p', $filter)    {        $idClient = $this->container->get('request')->query->get('id', 0);        $query->select('p.id, p.cost, p.idSchedule, p.nextDue, p.status, p.domain, r.name')            ->from('AppClientBundle:ClientProduct', $baseObject)            ->innerJoin('AppClientBundle:Product', 'r', 'WITH', 'p.idProduct = r.id')            ->andWhere($baseObject . '.idClient = :idClient')            ->setParameter('idClient', $idClient);        // Build filter here - Consult arrayToSQL($filter, false)        // $this->container->get('app_admin.helper.kendo_grid')->filter($query, $baseObject, $filter);    }    public function postParseRow(&$r)    {        $r['idSchedule'] = OrderConstants::getOrderPaymentTerms()[$r['idSchedule']];        $r['nextDue']    = $this->helperFormatter->format($r['nextDue'], 'date');        $r['status']     = Constants::getStatuses()[$r['status']];    }}