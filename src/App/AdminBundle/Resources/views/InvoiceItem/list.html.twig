{% extends 'AppAdminBundle:Base:list.html.twig' %}

{% block masterHeadText %}
    <h2>{{ 'VIEW_INVOICE' | trans }}</h2>
{% endblock %}

{% block listPageHeader %}
    <div class="main_cont pie">
        {% embed 'AppAdminBundle:Component:breadscrum.html.twig' with {'breadscum': breadscrum} %}
        {% endembed %}

        {% if invoice and invoice.isPaid %}
            <div class="alert">
                <strong>{{ 'WARNING' | trans }}!</strong>
                {{ 'THIS_INVOICE_HAS_ADREADY_BEEN_PAID' | trans }}
                . {{ 'PLEASE_MAKE_SURE_THAT_YOU_REALLY_WANT_TO_EDIT_THIS' | trans }}
            </div>
        {% endif %}
        {% if invoice and invoice.viewedByClient %}
            <div class="alert alert-success">
                {{ 'INVOICE_VIEWED_BY_CLIENT' | trans }}
            </div>
        {% endif %}

        {% embed 'AppAdminBundle:Component:form_basic.html.twig' with {'form': form} %}
            {% block formBlock %}
                <div class="clearfix"></div>
                <form action="{{ form['action'] }}" method="post" novalidate {{ form_enctype(form['view']) }} class="form-horizontal">
                    {% for element in form['view'] %}
                        {% if 'hidden' in element.vars.block_prefixes %}
                            {{ form_row(element) }}
                        {% endif %}
                    {% endfor %}

                    <div class="top-content">
                        <h3>{{ 'INVOICE' | trans }} {{ 'ID' | trans }} <span>#{{ invoice.number|default('') }}</span></h3>
                        <div class="row-fluid">
                            <div class="span4">
                                {{ form_label(form['view'].idClient) }}
                                {{ form_errors(form['view'].idClient) }}
                                {{ form_widget(form['view'].idClient) }}
                            </div>
                            <div class="span1">
                                {{ form_label(form['view'].discount) }}
                                {{ form_errors(form['view'].discount) }}
                                {{ form_widget(form['view'].discount) }}
                            </div>
                            <div class="span1">
                                {{ form_label(form['view'].tax) }}
                                {{ form_errors(form['view'].tax) }}
                                {{ form_widget(form['view'].tax) }}
                            </div>
                            <div class="span3">
                                {{ form_label(form['view'].issueDate) }}
                                {{ form_errors(form['view'].issueDate) }}
                                {{ form_widget(form['view'].issueDate) }}
                            </div>
                            <div class="span3">
                                {{ form_label(form['view'].dueDate) }}
                                {{ form_errors(form['view'].dueDate) }}
                                {{ form_widget(form['view'].dueDate) }}
                            </div>
                        </div>
                        <div class="row-fluid">
                            <div class="span6">
                                {{ form_label(form['view'].subject) }}
                                {{ form_errors(form['view'].subject) }}
                                {{ form_widget(form['view'].subject) }}
                            </div>
                            <div class="span3">
                                {{ form_label(form['view'].status) }}
                                {{ form_errors(form['view'].status) }}
                                {{ form_widget(form['view'].status) }}
                            </div>
                            <div class="span3">
                                <input type="submit" class="btn btn-primary bill-button" style="margin-left: 2px;" value="Submit">

                                <div class="actions">
                                    <a href="#" class="actions-button"><i class="entypo cog"></i> <span>Actions</span> <i class="entypo chevron chevron-down"></i></a>
                                    <ul class="actions-panel" style="display: none;">
                                        <li><a onclick="invoiceView()"><i class="entypo download"></i> Download PDF</a></li>
                                        <li><a onclick="invoiceSend('invoice');"><i class="entypo direction"></i> Send Invoice</a></li>
                                        <li><a onclick="invoiceSend('reminder');"><i class="entypo clock"></i> Send Reminder</a></li>
                                        <li><a onclick="invoiceSend('overdue');"><i class="entypo new"></i> Send Overdue Notice</a></li>
                                    </ul>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="page-block">

                        <div class="pull-left"><h3>{{ 'INVOICE_ITEMS' | trans }}</h3></div>
                        <div class="pull-right">
                            <a onclick='$("#grid").data("kendoGrid").addRow();' class="add-button"><i class="entypo plus"></i> <span>{{ 'ADD_NEW_RECORD' | trans }}</span></a>
                        </div>
                        <div class="clearfix"></div>

                        <div id="{{ grid.jsId | default('grid') }}" class="single-page-grid"></div>

                        <br />
                        <div class="row-fluid">
                            {{ form_widget(form['view'].notes) }}
                            <div class="span6 pull-right">
                                <table style="padding-top: 10px;" class="table total-table">
                                    <tr>
                                        <td>{{ 'SUBTOTAL' | trans }} <span class="pull-right">{{ currencyCode }}<span id="subtotal"></span></span></td>
                                        <td>{{ 'DISCOUNT' | trans }} <span class="pull-right">{{ currencyCode }}<span id="totaldiscount"></span></span></td>
                                        <td>{{ 'TAX' | trans }} <span class="pull-right">{{ currencyCode }}<span id="totaltax"></span></span></td>
                                    </tr>
                                    <tr class="spacing"></tr>
                                    <tr class="special">
                                        <td colspan="3">{{ 'GRAND_TOTAL' | trans }} <span>{{ currencyCode }}<span id="grandtotal">0.00</span></span></td>
                                    </tr>
                                </table>

                                <input type="submit" class="btn btn-primary bill-button" style="float: right; margin-left: 0;" value="Submit" />
                            </div>
                        </div>
                    </div>

                    <div class="page-block">
                        <div class="pull-left"><h3>{{ 'PAYMENTS' | trans }}</h3></div>
                        <div class="pull-right">
                            <a onclick='$("#GridPayment").data("kendoGrid").addRow();' class="add-button"><i class="entypo plus"></i> <span>{{ 'ADD_NEW_RECORD' | trans }}</span></a>
                        </div>
                        <div class="clearfix"></div>

                        <div id="{{ gridPayment.jsId | default('gridPayment') }}" class="single-page-grid"></div>
                    </div>
                </form>


                <script type="text/javascript">
                    function invoiceView() {
                        window.open("{{ invoiceViewClientSideUrl }}?id={{ invoice.id }}");
                    }

                    function invoiceSend(msg) {
                        var url = "{{ invoiceSendEmailUrl }}?msg=" + msg + "&id={{ invoice.id }}";
                        xmlhttp = new XMLHttpRequest();
                        xmlhttp.open("GET", url, false);
                        xmlhttp.send();
                        var result = xmlhttp.responseText;
                        if (result != "ok") alert("{{ 'COULDNT_SEND_INVOICE' | trans }} {{ invoice.number }} {{ 'ERROR' | trans }}: " + result);

                        if (msg == 'invoice') {
                            alert("{{ 'FINISHED_SENDING_INVOICE' | trans }}");
                        } else if (msg == 'reminder') {
                            alert("{{ 'FINISHED_SENDING_REMINDER' | trans }}");
                        } else {
                            alert("{{ 'FINISHED_SENDING_OVERDUE_NOTICE' | trans }}");
                        }
                    }
                </script>
            {% endblock %}
        {% endembed %}

        {% embed 'AppAdminBundle:Component:grid_inline.html.twig' with {'grid': gridPayment} %}
            {% block initializeGrid %}
                var gateways;
                var statuses;
                jQuery.ajax({
                url: '{{ mappingUrl }}/gateway_list?withNull=1',
                success: function(response) {
                gateways = response["data"];
                    jQuery.ajax({
                    url: '{{ mappingUrl }}/payment_status?withNull=1',
                    success: function(response) {
                    statuses = response["data"];
                    initializeGrid{{ grid.jsId | default('grid') }}();
                    }
                    });
                }
                });
            {% endblock %}
            {% block gridButtons %}
                <script id="refund-button-attachment" type="text/x-kendo-template">
                    # if(idType == 1) { #
                    {{ 'REFUND' | trans }}
                    # } else if (idType == 2) { #

                    # } else { #
                    <a class="k-button k-refund" name="#= id #">{{ 'REFUND' | trans }}</a>
                    # } #
                </script>
                <script id="edit-button-payment" type="text/x-kendo-template">
                    <a class="k-button k-button-icontext" href="{{ grid.editUrl }}?id=${id}">
                        <i class="k-icon k-edit"></i>{{ 'EDIT' | trans }}
                    </a>
                </script>
                <script id="create-button-payment" type="text/x-kendo-template">
                    <a class="k-button k-button-icontext" href="{{ grid.createUrl }}">
                        <i class="k-icon k-add"></i>
                        {{ grid.addNewLabel | default('ADD_NEW_RECORD') | trans }}
                    </a>
                </script>
            {% endblock %}

            {% block gridToolbar %}
                { name: "create" },
                { name: "export", text: "{{ 'EXPORT' | trans }}", template: kendo.template(jQuery('#export-button').html()) },
            {% endblock %}

            {% block gridFields %}
                id: {editable: false,nullable: false},
                idGateway: {editable: true, nullable: false},
                status: {editable: true, nullable: false},
                transaction: {editable: true, nullable: false},
                payDate: {editable: true, nullable: true, type: "datetime",  validation: {required: true}},
                amount: {editable: true, nullable: false, type: "number"},
                idType: {editable: false,nullable: false},
            {% endblock %}

            {% block gridColumns %}
                { field:"idGateway", title:"{{ 'GATEWAY' | trans }}", values: gateways,  width: 100, filterable: false, sortable: false},
                { field:"status", title:"{{ 'STATUS' | trans }}", values: statuses,  width: 85, filterable: false, sortable: false},
                { field:"transaction", title:"{{ 'TRANSACTION' | trans }}",  width: 115, filterable: false, sortable: false},
                { field:"payDate", title:"{{ 'PAY_DATE' | trans }}", editor: payDateEditor, template: '#= kendo.toString(payDate,"dd/MM/yyyy HH:mm:ss") #', width: 150, filterable: false, sortable: false },
                { field:"amount", title:"{{ 'AMOUNT' | trans }}", editor: amountEditor, width: 90, template: "{{ currencyCode }}#= amount#", filterable: false, sortable: false },
                { command: "edit", width: 190 },
                { template: kendo.template($("#refund-button-attachment").html()), width: 150 },
                { command: "destroy", width: 100 }
            {% endblock %}

            {% block extraScript %}
                function gatewayEditor(container, options) {
                $('<input data-bind="value:' + options.field + '" />')
                                                                    .appendTo(container)
                                                                    .kendoDropDownList({
                                                                    autoBind: true,
                                                                    dataSource: gateways
                                                                    });
                                                                    }

                function statusEditor(container, options) {
                $('<input data-bind="value:' + options.field + '" />')
                                                                    .appendTo(container)
                                                                    .kendoDropDownList({
                                                                    autoBind: true,
                                                                    dataSource: statuses
                                                                    });
                                                                    }

                                                                    function amountEditor(container, options) {
                                                                    $('\
                <input data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoNumericTextBox({
                format: "{{ currencyCode }}#.##"
                });
                }



                function payDateEditor(container, options){
                $('<input data-bind="value:' + options.field + '" />')
                .appendTo(container)
                .kendoDateTimePicker({
                format: 'dd/MM/yyyy HH:mm:ss'
                });
                }

                jQuery("#{{ grid.jsId | default('grid') }}").on("click", ".k-refund", function() {
                var button = this.name;
                var status = this.innerHTML;

                var url = '{{ refundUrl }}?id=' + button;

                xmlhttp = new XMLHttpRequest();
                xmlhttp.open("GET",url,false);
                xmlhttp.send();
                var result = xmlhttp.responseText;

                if(result == 'ok'){

                }
                else{
                alert("{{ 'COULDNT_REFUND' | trans }}");
                }
                jQuery("#{{ grid.jsId | default('grid') }}").data("kendoGrid").dataSource.read();
                });
            {% endblock %}
        {% endembed %}
    </div>

    <div class="clear"></div>
{% endblock %}


{% block listGrid %}
    {% embed 'AppAdminBundle:Component:grid_inline.html.twig' with {'grid': grid} %}
        {% block initializeGrid %}
            var typeEditors;
            jQuery.ajax({
            url: '{{ projectTypesListUrl }}',
            success: function(response) {
            typeEditors = response["data"];
            initializeGrid{{ grid.jsId | default('grid') }}();
            }
            });
        {% endblock %}

        {% block extraConfigDataSource %}
            change: waitAndCalculateTotal
        {% endblock %}

        {% block gridToolbar %}
            { name: "create" }
        {% endblock %}

        {% block gridFields %}
            id: { editable: false, nullable: false },
            idType: { editable: true, nullable: false},
            description: { editable: true, nullable: false },
            quantity: { editable: true, nullable: false, type: "number" },
            unitPrice: { editable: true, nullable: false, type: "number" },
            total: { editable: false, nullable: false, type: "number" }
        {% endblock %}

        {% block gridColumns %}
            { field:"idType", title:"{{ 'WORK_TYPE' | trans }}", values: typeEditors, width: 120, filterable: false },
            { field:"description", title:"{{ 'DESCRIPTION' | trans }}" , filterable: false},
            { field:"quantity", title:"{{ 'QUANTITY' | trans }}", editor: qtyEditor, width: 95, template: '\
            <span name="quantity">#=quantity#</span>', filterable: false },
            { field:"unitPrice", title:"{{ 'UNIT_PRICE' | trans }}", editor: priceEditor, width: 95, template: '\
            <span name="unitPrice">{{ currencyCode }}#= unitPrice#</span>', filterable: false},
            { field:"total", title:"{{ 'LINE_TOTAL' | trans }}", width: 95, template: '\
            <span name="lineTotal">{{ currencyCode }}#= total#</span>', filterable: false, sortable: false },
            { command: "edit", width: 190 },
            { command: "destroy", width: 100 }
        {% endblock %}

        {% block extraScript %}
            function typeEditor(container, options) {
            $('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoDropDownList({
            autoBind: true,
            dataSource: {
            type: "json",
            transport: {
            read: "{{ projectTypesListUrl }}"
            },
            schema: {
            data: "data",
            }
            }
            });
            }
            function qtyEditor(container, options) {
            $('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoNumericTextBox();
            }
            function priceEditor(container, options) {
            $('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoNumericTextBox({
            format: "{{ currencyCode }}#.##"
            });
            }

            // TOTAL CALCULATION
            function waitAndCalculateTotal(data){
            setTimeout(calculateTotal, 250, data);
            }
            jQuery("#{{ form['view'].discount.vars.id }}").bind('change', function() {
            setTimeout(calculateTotal, 250, null);
            });
            jQuery("#{{ form['view'].tax.vars.id }}").bind('change', function() {
            setTimeout(calculateTotal, 250, null);
            });
            function calculateTotal(data) {
            var data = jQuery("#grid").data("kendoGrid").dataSource.data();
            var subtotal = 0;
            for (var i = 0; i < data.length; i++) {
            var lineTotal = data[i]['unitPrice'] * data[i]['quantity'];
            data[i]['total'] = lineTotal;
            subtotal += lineTotal;
            }

            // Compute bottom line
            var discount = jQuery('#{{ form['view'].discount.vars.id }}').val() / 100;
            var taxGroup = jQuery('#{{ form['view'].tax.vars.id }}').val();
            var tax = 0;
            $.ajax({
            url: "{{ path('app_admin_tax_calculate') }}?client="+jQuery('#{{ form['view'].idClient.vars.id }}').val()+"&tax="+jQuery('#{{ form['view'].tax.vars.id }}').val(),
            type: 'get',
            dataType: 'html',
            async: false,
            success: function(data) {
            tax = parseFloat(data);
            }
            });

            jQuery('#subtotal').html(roundToCurrency(subtotal).toFixed(2));

            var totaldiscount = subtotal * discount;
            jQuery("#totaldiscount").html(roundToCurrency(totaldiscount).toFixed(2));

            var totaltax = (subtotal - totaldiscount) * tax;
            jQuery("#totaltax").html(roundToCurrency(totaltax).toFixed(2));

            var grandtotal = (subtotal - totaldiscount + totaltax);
            jQuery("#grandtotal").html(roundToCurrency(grandtotal).toFixed(2));

            }

            function roundToCurrency(decimal){
            var finalvalue = 100*parseFloat(decimal);
            finalvalue = Math.round(finalvalue);
            finalvalue = finalvalue/100;
            return finalvalue;
            }
            $(".addItem").click(function() {
            var grid = $("#grid").data("kendoGrid");
            grid.addRow();
            $(".k-grid-edit-row").appendTo("#grid tbody");
            });
        {% endblock %}
    {% endembed %}
{% endblock %}