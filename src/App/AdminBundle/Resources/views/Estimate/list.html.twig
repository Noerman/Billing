{% extends 'AppAdminBundle:Base:list.html.twig' %}

{% block listGrid %}
    {% embed 'AppAdminBundle:Component:grid.html.twig' with {'grid': grid} %}
        {% block initializeGrid %}
            var clientDs;

            jQuery.when(
            jQuery.ajax({
            url: '{{ mappingUrl }}/client_list',
            success: function(response) {
            clientDs = response["data"];
            }
            })
            ).done(function(a1){
            initializeGrid{{ grid.jsId | default('grid') }}();
            });
        {% endblock %}

        {% block gridButtons %}
            {{ parent() }}
            <script id="invoice-button" type="text/x-kendo-template">
                # if(invoiced != 1){ #
                <a class="k-button k-invoice" name="#= id #">{{ 'INVOICE' | trans }}</a>
                # } #
            </script>
        {% endblock %}

        {% block gridToolbar %}
            { name: "add", text: "{{ 'ADD_NEW_RECORD' | trans }}", template: kendo.template(jQuery("#create-button").html()) },
            { name: "export", text: "Export", template: kendo.template(jQuery('#export-button').html()) },
        {% endblock %}

        {% block gridFields %}
            id: { editable: false, nullable: false },
            idClient: { editable: true, nullable: false },
            subject: {editable: true, nullable: false },
            amount: { editable: false, nullable: false, type: "number" },
            payment: { editable: false, nullable: false, type: "number" },
            status: { editable: false, nullable: false },
        {% endblock %}

        {% block gridColumns %}
            { field:"id", title:"{{ 'ID' | trans }}", width: 95, template: '\
            <a href="{{ estimateItemListUrl }}?id=#=id#">#=number#</a>' },
            { field:"idClient", title:"{{ 'CLIENT' | trans }}", editor: clientEditor, width: 200,
            filterable: {
            ui: clientFilter,
            operators: {
            string: { eq: "{{ 'IS_EQUAL_TO' | trans }}"}
            }
            }
            },
            { field:"subject", title:"{{ 'SUBJECT' | trans }}", width: 200 },
            { field:"amount", title:"{{ 'AMOUNT' | trans }}", width: 90, template: "{{ currencyCode }}#= amount ? amount.toFixed(2) : amount#", filterable: false, sortable: false },
            { field:"status", title:"{{ 'STATUS' | trans }}", width: 90, filterable: false, sortable: false },
            { template: kendo.template($("#edit-button").html()), width: 100 },
            { template: kendo.template($("#invoice-button").html()), width: 100 },
            { command: "destroy", width: 100  },
            { template: '<input type="checkbox" name="estimate" value="#=id#" />', width: 40  },
        {% endblock %}

        {% block extraScript %}
            jQuery("#{{ grid.jsId | default('grid') }}").on("click", ".k-invoice", function() {
            if (!confirm('{{ 'ARE_YOU_REALLY_WANT_TO_CHANGE_THIS_ESTIMATE_TO_AN_INVOICE' | trans }}')) {
            return false;
            }
            var button = this.name;
            var status = this.innerHTML;

            var url = '{{ invoiceUrl }}?id=' + button;

            xmlhttp = new XMLHttpRequest();
            xmlhttp.open("GET",url,false);
            xmlhttp.send();
            var result = xmlhttp.responseText;

            if(result == 'ok'){
            alert('{{ 'THE_ESTIMATE_HAS_BEEN_CHANGED_TO_AN_INVOICE' | trans }}');
            }
            else{
            alert("{{ 'COULDNT_MAKE_INVOICE' | trans }}");
            }
            jQuery("#{{ grid.jsId | default('grid') }}").data("kendoGrid").dataSource.read();
            });

            function clientFilter(element) {
            element.kendoDropDownList({
            dataSource: clientDs,
            dataTextField: 'text',
            dataValueField: 'value',
            optionLabel: "-- {{ 'SELECTED_VALUE' | trans }}--"
            });
            }
            function clientEditor(container, options) {
            $('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoAutoComplete({
            minLength: 3,
            filter: 'contains',
            dataSource: {
            type: "json",
            transport: {
            read: "http://dev.sysadmin.co.uk/old/admin/crud/general/clients.json.php"
            },
            schema: {
            data: "data",
            }
            }
            });
            }
            function datePicker(container, options) {
            $('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoDatePicker({

            });
            }

        {% endblock %}
    {% endembed %}
{% endblock %}


{% block afterGrid %}
    <br />
    <script type="text/javascript">
        function getHashFromEstimate(id) {
            var url = "{{ estimateGetHashUrl }}?id=" + id;
            xmlhttp = new XMLHttpRequest();
            xmlhttp.open("GET", url, false);
            xmlhttp.send();
            var result = xmlhttp.responseText;
            return result;
        }

        function estimateView() {
            var estimates = document.getElementsByName("estimate");
            for (i = 0; i < estimates.length; i++) {
                if (estimates[i].checked) {
                    window.open("{{ estimateViewClientSideUrl }}?id=" + estimates[i].value);
                }
            }
        }
        function estimateSend(msg) {
            var estimates = document.getElementsByName("estimate");
            for (i = 0; i < estimates.length; i++) {
                if (estimates[i].checked) {
                    var url = "{{ estimateSendEmailUrl }}?msg=" + msg + "&id=" + estimates[i].value;
                    xmlhttp = new XMLHttpRequest();
                    xmlhttp.open("GET", url, false);
                    xmlhttp.send();
                    var result = xmlhttp.responseText;
                    if (result != "ok") alert("{{ 'COULD_SEND_ESTIMATE' | trans }} " + estimates[i].value + ". {{ 'ERROR' | trans }}: " + result);
                }
            }
            alert("{{ 'FINISHED_SENDING_ESTIMATE' | trans }}");
            jQuery("#{{ grid.jsId | default('grid') }}").data("kendoGrid").dataSource.read();
        }
    </script>
{% endblock %}
