{% extends 'AppAdminBundle:Base:list.html.twig' %}

{% block addNewButton %}
{% endblock %}

{% block listPageHeader %}
    {% embed 'AppAdminBundle:Component:breadscrum.html.twig' with {'breadscum': breadscrum} %}
    {% endembed %}

    {% embed 'AppAdminBundle:Component:form_basic.html.twig' with {'form': form} %}
        {% block formBlock %}
            <form action="{{ form['action'] }}" method="post" novalidate {{ form_enctype(form['view']) }} class="form-horizontal">
                {% for element in form['view'] %}
                    {% if 'hidden' in element.vars.block_prefixes %}
                        {{ form_row(element) }}
                    {% endif %}
                {% endfor %}

                <div class="row-fluid">
                    {{ form_row(form['view'].name) }}
                    {{ form_row(form['view'].number) }}
                </div>
                <div class="row-fluid">
                    {{ form_row(form['view'].sortCode) }}
                    {{ form_row(form['view'].idAccountType) }}
                </div>
                <div class="row-fluid">
                    {{ form_row(form['view'].street1) }}
                    {{ form_row(form['view'].street2) }}
                </div>
                <div class="row-fluid">
                    {{ form_row(form['view'].county) }}
                    {{ form_row(form['view'].town) }}
                </div>
                <div class="row-fluid">
                    {{ form_row(form['view'].idCountry) }}
                    {{ form_row(form['view'].postcode) }}
                </div>
                <div class="row-fluid">
                    {{ form_row(form['view'].telephone) }}
                    {{ form_row(form['view'].email) }}
                </div>

                <div id="{{ grid.jsId | default('grid') }}"></div>
                <br />

                <div class="row-fluid">
                    <div class="span2">
                        <input type="submit" class="btn btn-primary" value="Submit" />
                    </div>
                    <div class="span4 pull-right">
                        <table align="right" style="padding-top: 10px; width: 200px" class="table">
                            <tr>
                                <td width="95px">{{ currencyCode }}<span id="balance"></span></td>
                                <td width="260px">{{ 'BALANCE' | trans }}</td>
                            </tr>
                        </table>
                    </div>
                </div>

            </form>
        {% endblock %}
    {% endembed %}
{% endblock %}

{% block listGrid %}
    {% embed 'AppAdminBundle:Component:grid_inline.html.twig' with {'grid': grid} %}
        {% block initializeGrid %}
            var directions;
            jQuery.ajax({
            url: '{{ mappingUrl }}/account_direction?withNull=1',
            success: function(response) {
            directions = response["data"];
            initializeGrid{{ grid.jsId | default('grid') }}();
            waitAndUpdateBalance();
            }
            });
        {% endblock %}

        {% block gridButtons %}
            {{ parent() }}
        {% endblock %}

        {% block gridToolbar %}
            { name: "create" },
            { name: "export", text: "{{ 'EXPORT' | trans }}", template: kendo.template(jQuery('#export-button').html()) },
        {% endblock %}

        {% block extraConfigDataSource %}
            change: waitAndUpdateBalance
        {% endblock %}

        {% block gridFields %}
            id: {editable: false,nullable: false},
            timestamp: {editable: true, nullable: false, type: "date", format: "dd/MM/yyyy hh:mm:ss", validation: {required: true}},
            idDirection: {editable: true, nullable: false},
            amount: {editable: true, nullable: false, type: "number"},
            description: {editable: true, nullable: false},
        {% endblock %}

        {% block gridColumns %}
            { field:"id", title:"{{ 'ID' | trans }}", hidden: true, width: 120},
            { field:"timestamp", title:"{{ 'TIME' | trans }}", editor: timestampEditor, template: '#= kendo.toString(timestamp,"dd/MM/yyyy HH:mm:ss") #', width: 200, filterable: false },
            { field:"idDirection", title:"{{ 'DIRECTION' | trans }}", values: directions,  width: 150, filterable: false, sortable: false},
            { field:"amount", title:"{{ 'AMOUNT' | trans }}", editor: amountEditor, width: 95, template: '
            <span name="amount">{{ currencyCode }}#=amount#</span>', filterable: false},
            { field:"description", title:"{{ 'DESCRIPTION' | trans }}", width: 350},
            { command: "edit", width: 150  },
            { command: "destroy", width: 150  }
        {% endblock %}

        {% block extraScript %}
            function waitAndUpdateBalance() {
            setTimeout(updateBalance, 250);
            }
            function updateBalance() {
            var url = '{{ getBalanceUrl }}?idAccount={{ account.id }}';
            xmlhttp = new XMLHttpRequest();
            xmlhttp.open("GET",url,false);
            xmlhttp.send();
            var result = xmlhttp.responseText;
            jQuery('#balance').html(result);
            }
            function timestampEditor(container, options){
            jQuery('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoDateTimePicker({});
            }

            function amountEditor(container, options) {
            jQuery('<input data-bind="value:' + options.field + '" />')
            .appendTo(container)
            .kendoNumericTextBox({
            format: "{{ currencyCode }}#.##"
            });
            }
        {% endblock %}
    {% endembed %}
{% endblock %}

